- name: Disable the package
  ansible.builtin.command: dnf module disable nodejs -y    # Not idempotent every time it will changing the state to yellow color in the playbook
  
- name: enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: Install the package
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - nodejs
    - mysql

- name: Creating a user
  ansible.builtin.user:
    name: expense

- name: include frome common role
  include_role:
    name: common
    tasks_from: main

# - name: Creating a directory
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: Download the backend code
#   ansible.builtin.get_url:
#     url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#     dest: /tmp/backend.zip

# - name: Unzip the backend code
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes

- name: Install the dependencies
  community.general.npm:
    path: /app

- name: Copy the backend service
  ansible.builtin.template:   #it will search in the templates folder in the role
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service
    
- name: Install the pip package
  ansible.builtin.pip:     # pip is a package manager for python
    name: "{{item}}"          # A MySQL module is required: for Python 2.7 either PyMySQL, or MySQL-python
    executable: pip3.9     # pip3.9 is the executable file for pip
  loop:                    # loop is used to run the same task multiple times
    - PyMySQL
    - cryptography   
- name: import the mysql schema
  ansible.builtin.mysql_db:
    name: all
    state: import
    login_host: "{{ mysql_login_host }}" 
    login_user: "{{ mysql_login_user }}"
    login_password: "{{ mysql_login_password }}"
    target: /app/schema/backend.sql

- name: Daemon reload and restart the service
  ansible.builtin.systemd_service:
    name: backend
    state: restarted
    daemon_reload: yes
    enabled: yes     # true/yes